From 4fda47eeca76aa0c8a952c746483a8341ab4e3a6 Mon Sep 17 00:00:00 2001
From: George Pestell <ghtpestell@protonmail.com>
Date: Sun, 23 Jan 2022 18:46:25 +0000
Subject: [PATCH] JPMorgan Task 2

---
 src/App.tsx   | 29 +++++++++++++++++++++++------
 src/Graph.tsx | 28 +++++++++++++++++++++++++---
 2 files changed, 48 insertions(+), 9 deletions(-)

diff --git a/src/App.tsx b/src/App.tsx
index 0728518..165b67a 100755
--- a/src/App.tsx
+++ b/src/App.tsx
@@ -8,6 +8,7 @@ import './App.css';
  */
 interface IState {
   data: ServerRespond[],
+  showGraph: boolean,
 }
 
 /**
@@ -22,6 +23,7 @@ class App extends Component<{}, IState> {
       // data saves the server responds.
       // We use this state to parse data down to the child element (Graph) as element property
       data: [],
+      showGraph: false,
     };
   }
 
@@ -29,18 +31,33 @@ class App extends Component<{}, IState> {
    * Render Graph react component with state.data parse as property data
    */
   renderGraph() {
-    return (<Graph data={this.state.data}/>)
+    // Only render graph if showGraph is set to true
+    if (this.state.showGraph) {
+      return (<Graph data={this.state.data}/>)
+    }
   }
 
   /**
    * Get new data from server and update the state with the new data
    */
   getDataFromServer() {
-    DataStreamer.getData((serverResponds: ServerRespond[]) => {
-      // Update the state by creating a new array of data that consists of
-      // Previous data in the state and the new data from server
-      this.setState({ data: [...this.state.data, ...serverResponds] });
-    });
+    let count = 0;
+    const interval = setInterval(() => {
+      DataStreamer.getData((serverResponds: ServerRespond[]) => {
+        // Update the current data to be added to the graph with the server response
+        // Also show the graph if not already
+        this.setState({ 
+          data: serverResponds,
+          showGraph: true,
+        });
+      });
+
+      // Increment the server call count and end if 1000 calls have been made
+      count++;
+      if (count > 1000) {
+        clearInterval(interval);
+      }
+    }, 100);
   }
 
   /**
diff --git a/src/Graph.tsx b/src/Graph.tsx
index ec1430e..e245959 100644
--- a/src/Graph.tsx
+++ b/src/Graph.tsx
@@ -14,7 +14,7 @@ interface IProps {
  * Perspective library adds load to HTMLElement prototype.
  * This interface acts as a wrapper for Typescript compiler.
  */
-interface PerspectiveViewerElement {
+interface PerspectiveViewerElement extends HTMLElement {
   load: (table: Table) => void,
 }
 
@@ -32,7 +32,7 @@ class Graph extends Component<IProps, {}> {
 
   componentDidMount() {
     // Get element to attach the table from the DOM.
-    const elem: PerspectiveViewerElement = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
+    const elem = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
 
     const schema = {
       stock: 'string',
@@ -41,6 +41,8 @@ class Graph extends Component<IProps, {}> {
       timestamp: 'date',
     };
 
+
+
     if (window.perspective && window.perspective.worker()) {
       this.table = window.perspective.worker().table(schema);
     }
@@ -49,7 +51,27 @@ class Graph extends Component<IProps, {}> {
 
       // Add more Perspective configurations here.
       elem.load(this.table);
-    }
+    
+      // Set the graph type for continuous lines
+      elem.setAttribute('view', 'y_line');
+
+      // Split data values by stock identifier
+      elem.setAttribute('column-pivots', '["stock"]');
+
+      // Show data on a timeline
+      elem.setAttribute('row-pivots', '["timestamp"]');
+
+      // Set the data value to the top_ask_price
+      elem.setAttribute('columns', '["top_ask_price"]');
+
+      // Split stocks and timestamps into distinct groups but average top and bid prices
+      elem.setAttribute('aggregates', `{
+        "stock" : "distinct count",
+        "top_ask_price" : "avg",
+        "top_bid_price" : "avg",
+        "timestamp" : "distinct count"
+        }`);
+      }
   }
 
   componentDidUpdate() {
-- 
2.34.1

